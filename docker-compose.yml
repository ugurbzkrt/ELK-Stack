version: '2.2'
services:
  # Hello World Go service inside ./go-hello-http
  go-hello-http:
    container_name: go-hello-http
    build :
      context: ./go-hello-http
      dockerfile: ./Dockerfile
    ports:
      - "9090:9090"
    logging:
      driver: "fluentd"
      options:
        fluentd-address: localhost:24224
        tag: "go-hello-http.access"
    networks:
      - alyaefknet
    depends_on:
      - fluent-bit
  # fluentbit log collector service
  fluent-bit:
    image: fluent/fluent-bit:1.5
    volumes:
      - ./fluent-bit/conf:/fluent-bit/etc
    ports:
      - 24224:24224
      - 5140:5140/udp
      - 2020:2020
    logging:
        driver: "json-file"
        options:
            max-size: 100m
            max-file: "5"
    networks:
      - alyaefknet
  # elasticsearch data store
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    container_name: es01
    ports:
      - "9200:9200"
    networks:
      - alyaefknet
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - bootstrap.memory_lock=false
      - cluster.initial_master_nodes=es01
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  # kibana dashboard service
  kibana:
    image: docker.elastic.co/kibana/kibana:7.8.1
    container_name: kib01
    links:
      - "elasticsearch"
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: http://es01:9200
      ELASTICSEARCH_HOSTS: http://es01:9200
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: "MY_SECRET_KEYMY_SECRET_KEYMY_SECRET_KEYMY_SECRET_KEY"
    networks:
      - alyaefknet

networks:
  alyaefknet:
    driver: bridge
